name: Deploy para o Oracle Cloud Kubernetes Engine (OKE)

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      DOCKER_REPO: 'tiagohique/myapprunner'
      IMAGE_TAG: 'latest'
      K8S_DEPLOYMENT: 'myapprunner-deployment'
      K8S_NAMESPACE: 'default'

    steps:
      - name: Fazer checkout do código
        uses: actions/checkout@v2

      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Fazer login no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Construir e enviar imagem Docker para ARM64
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/arm64
          tags: ${{ env.DOCKER_REPO }}:${{ env.IMAGE_TAG }}
          push: true

      - name: Instalar o Oracle CLI
        run: |
          sudo apt update
          sudo apt install -y unzip
          curl -LO https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh
          bash install.sh --accept-all-defaults --install-dir ~/bin
          export PATH=~/bin:$PATH  # Adiciona o OCI CLI ao PATH para esta sessão
          oci --version  # Verifica se o OCI CLI foi instalado corretamente

      - name: Configurar o Oracle CLI
        env:
          OCI_PRIVATE_KEY: ${{ secrets.OCI_PRIVATE_KEY }}
          OCI_FINGERPRINT: ${{ secrets.OCI_FINGERPRINT }}
          OCI_TENANCY: ${{ secrets.OCI_TENANCY }}
          OCI_USER: ${{ secrets.OCI_USER }}
          OCI_REGION: ${{ secrets.OCI_REGION }}
        run: |
          mkdir -p ~/.oci
          echo "$OCI_PRIVATE_KEY" | base64 --decode > ~/.oci/oci_api_key.pem
          echo "[DEFAULT]
          user=$OCI_USER
          fingerprint=$OCI_FINGERPRINT
          tenancy=$OCI_TENANCY
          region=$OCI_REGION
          key_file=~/.oci/oci_api_key.pem" > ~/.oci/config
          # Corrige as permissões dos arquivos
          oci setup repair-file-permissions --file ~/.oci/config
          oci setup repair-file-permissions --file ~/.oci/oci_api_key.pem

      - name: Instalar o kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl
          kubectl version --client

      - name: Configurar o Kubernetes
        env:
          PATH: ~/bin:$PATH  # Garante que o OCI CLI esteja no PATH
          OCI_REGION: ${{ secrets.OCI_REGION }}
        run: |
          oci ce cluster create-kubeconfig --cluster-id ${{ secrets.OKE_CLUSTER_ID }} --file ~/.kube/config --region $OCI_REGION --token-version 2.0.0
          kubectl config use-context $K8S_NAMESPACE

      - name: Implantar Manifests do Kubernetes
        run: |
          kubectl apply -f k8s/service.yaml
          kubectl apply -f k8s/deployment.yaml

      - name: Atualizar a imagem do Deployment
        run: |
          kubectl set image deployment/$K8S_DEPLOYMENT $K8S_DEPLOYMENT=$DOCKER_REPO:$IMAGE_TAG -n $K8S_NAMESPACE
          kubectl rollout status deployment/$K8S_DEPLOYMENT -n $K8S_NAMESPACE
