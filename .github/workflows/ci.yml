name: Deploy para o Oracle Cloud Kubernetes Engine (OKE)

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      DOCKER_REPO: 'tiagohique/myapprunner'
      IMAGE_TAG: 'latest'
      K8S_DEPLOYMENT: 'myapprunner-deployment'
      K8S_NAMESPACE: 'default'

    steps:
      - name: Fazer checkout do cÃ³digo
        uses: actions/checkout@v2

      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Fazer login no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Construir e enviar imagem Docker para ARM64
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/arm64
          tags: ${{ env.DOCKER_REPO }}:${{ env.IMAGE_TAG }}
          push: true

      - name: Configurar Python (requisito para OCI CLI)
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Instalar OCI CLI
        run: |
          curl -L https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh | bash -s -- --accept-all-defaults
          echo "${{ secrets.OCI_PRIVATE_KEY }}" > ~/.oci/oci_api_key.pem

      - name: Configurar o Oracle CLI
        run: |
          mkdir -p ~/.oci
          cat <<EOF > ~/.oci/config
          [DEFAULT]
          user=${{ secrets.OCI_USER }}
          fingerprint=${{ secrets.OCI_FINGERPRINT }}
          key_file=~/.oci/oci_api_key.pem
          tenancy=${{ secrets.OCI_TENANCY }}
          region=${{ secrets.OCI_REGION }}
          EOF

      - name: Instalar o kubectl
        uses: azure/setup-kubectl@v3
        with:
          kubectl-version: 'latest'

      - name: Configurar o Kubernetes
        run: |
          oci ce cluster create-kubeconfig --cluster-id ${{ secrets.OKE_CLUSTER_ID }} --file ~/.kube/config --region ${{ secrets.OCI_REGION }} --token-version 2.0.0
          kubectl config use-context $K8S_NAMESPACE

      - name: Implantar Manifests do Kubernetes
        run: |
          kubectl apply -f k8s/service.yaml
          kubectl apply -f k8s/deployment.yaml

      - name: Atualizar a imagem do Deployment
        run: |
          kubectl set image deployment/$K8S_DEPLOYMENT $K8S_DEPLOYMENT=$DOCKER_REPO:$IMAGE_TAG -n $K8S_NAMESPACE
          kubectl rollout status deployment/$K8S_DEPLOYMENT -n $K8S_NAMESPACE
